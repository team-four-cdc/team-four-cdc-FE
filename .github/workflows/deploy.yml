name: Deploy Frontend

on:
  workflow_run:
    workflows: ["Test Frontend"]
    branches: [ "develop" ]
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_BASE_URL: ${{ secrets.NEXT_PUBLIC_BASE_URL }}
    steps:
    - uses: actions/checkout@v3
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    - name: Cache dependencies
      id: cache
      uses: actions/cache@v3
      with:
        path: node_modules
        key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm ci
    - name: Run build
      run: npm run build
    - name: Run export
      run: npm run export
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: output-files
        path: ${{ secrets.OUT_DIR }}
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Get artifact
      id: download
      uses: actions/download-artifact@v3
      with:
        name: output-files
        path: ${{ secrets.OUT_DIR }}
    - name: Remove existing output on server
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        script: |
          sudo rm -R ${{ format('~/{0}', secrets.OUT_DIR) }}
          sudo rm -R ${{ format('{0}/{1}', secrets.WEBROOT_DIR, secrets.OUT_DIR) }}
    - name: Deploy
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        source: ${{ format('{0}/*', secrets.OUT_DIR) }}
        target: ~/
    - name: Copy output to web server
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        script: sudo cp -r ${{ format('{0}/ {1}/', secrets.OUT_DIR, secrets.WEBROOT_DIR) }}